----I ned to drop all tables

DROP TABLE IF EXISTS ALLERGY;
DROP TABLE IF EXISTS BABY_CARE_GIVER;
DROP TABLE IF EXISTS USERS;
DROP TABLE IF EXISTS BATH;
DROP TABLE IF EXISTS BATH_PRODUCTS_REFERENCE;
DROP TABLE IF EXISTS BATH_PRODUCTS;
DROP TABLE IF EXISTS DIAPER;
DROP TABLE IF EXISTS DIAPER_TYPE_REFERENCE;
DROP TABLE IF EXISTS DIAPER_TYPE;
DROP TABLE IF EXISTS FEEDING_FOOD_REFERENCE;
DROP TABLE IF EXISTS FEEDING;
DROP TABLE IF EXISTS GROWTH;
DROP TABLE IF EXISTS MEDICATION;
DROP TABLE IF EXISTS NIGHT_CHECK;
DROP TABLE IF EXISTS PUMPING;
DROP TABLE IF EXISTS TEMPERATURE;
DROP TABLE IF EXISTS TUMMY_TIME;

DROP TABLE IF EXISTS EVENT;
DROP TABLE IF EXISTS NOTE;
DROP TABLE IF EXISTS FOOD;
DROP TABLE IF EXISTS BABY;

DROP TYPE IF EXISTS gender_enum;
DROP TYPE IF EXISTS event_type_enum;
DROP TYPE IF EXISTS post_care_enum;
DROP TYPE IF EXISTS diaper_type_enum;
DROP TYPE IF EXISTS feeding_type_enum;

CREATE TABLE IF NOT EXISTS USERS (
  user_id SERIAL PRIMARY KEY,
  email VARCHAR(255) NOT NULL UNIQUE,
  password VARCHAR(50) NOT NULL,
  first_name VARCHAR(50) NOT NULL,
  last_name VARCHAR(50) NOT NULL,
  phone VARCHAR(20) NULL UNIQUE
);

CREATE TYPE gender_enum AS ENUM ('FEMALE', 'MALE');
CREATE TABLE IF NOT EXISTS BABY (
  baby_id SERIAL PRIMARY KEY,
  birthday DATE NOT NULL,
  first_name VARCHAR(50) NOT NULL,
  last_name VARCHAR(50) NOT NULL,
  gender gender_enum NOT NULL
);

CREATE TABLE IF NOT EXISTS BABY_CARE_GIVER (
  baby_id INT NOT NULL,
  user_id INT NOT NULL,
  PRIMARY KEY (baby_id, user_id),
  FOREIGN KEY (baby_id) REFERENCES BABY(baby_id),
  FOREIGN KEY (user_id) REFERENCES USERS(user_id)
);

CREATE TABLE IF NOT EXISTS ALLERGY (
  allergy_id SERIAL PRIMARY KEY,
  baby_id INT NOT NULL,
  name VARCHAR(50) NOT NULL,
  description VARCHAR(255) NULL,
  FOREIGN KEY (baby_id) REFERENCES BABY(baby_id)
);

CREATE TABLE IF NOT EXISTS NOTE (
  note_id SERIAL PRIMARY KEY,
  note TEXT NOT NULL
);


CREATE TYPE event_type_enum AS ENUM ('BATH', 'DIAPER', 'FEEDING', 'GROWTH', 'MEDICATION', 'NIGHT_CHECK', 'PUMPING', 'TEMPERATURE', 'TUMMY_TIME');
CREATE TABLE IF NOT EXISTS EVENT (
  event_id SERIAL PRIMARY KEY,
  baby_id INT NOT NULL,
  event_type event_type_enum NOT NULL,
  start_on TIMESTAMP NOT NULL,
  end_on TIMESTAMP NULL
);


CREATE TABLE IF NOT EXISTS BATH_PRODUCTS (
    bath_products_id SERIAL PRIMARY KEY,
    name VARCHAR(50) NOT NULL,
    description VARCHAR(255) NULL
);
CREATE TABLE IF NOT EXISTS BATH_PRODUCTS_REFERENCE (
    event_id INT NOT NULL,
    bath_product_id INT NOT NULL,
    PRIMARY KEY (event_id, bath_product_id),
    FOREIGN KEY (event_id) REFERENCES EVENT(event_id),
    FOREIGN KEY (bath_product_id) REFERENCES BATH_PRODUCTS(bath_products_id)
);
CREATE TYPE post_care_enum AS ENUM ('OIL', 'LOTION');
CREATE TABLE IF NOT EXISTS BATH (
    event_id INT NOT NULL,
    note_id INT NULL,
    post_care post_care_enum NULL,
    PRIMARY KEY (event_id),
    FOREIGN KEY (event_id) REFERENCES EVENT(event_id),
    FOREIGN KEY (note_id) REFERENCES NOTE(note_id)
);

CREATE TABLE IF NOT EXISTS DIAPER_TYPE (
    diaper_type_id SERIAL PRIMARY KEY,
    name VARCHAR(50) NOT NULL,
    description VARCHAR(255) NULL
);
CREATE TABLE IF NOT EXISTS DIAPER_TYPE_REFERENCE (
    event_id INT NOT NULL,
    diaper_type_id INT NOT NULL,
    PRIMARY KEY (event_id, diaper_type_id),
    FOREIGN KEY (event_id) REFERENCES EVENT(event_id),
    FOREIGN KEY (diaper_type_id) REFERENCES DIAPER_TYPE(diaper_type_id)
);

CREATE TYPE diaper_type_enum AS ENUM ('PEE', 'POOP', 'BLOWOUT');
CREATE TABLE IF NOT EXISTS DIAPER (
    event_id INT NOT NULL,
    note_id INT NULL,
    type diaper_type_enum NOT NULL,
    color VARCHAR(50) NULL,
    PRIMARY KEY (event_id),
    FOREIGN KEY (event_id) REFERENCES EVENT(event_id),
    FOREIGN KEY (note_id) REFERENCES NOTE(note_id)
);

CREATE TABLE IF NOT EXISTS FOOD (
    food_id SERIAL PRIMARY KEY,
    name VARCHAR(50) NOT NULL,
    description VARCHAR(255) NULL
);
CREATE TABLE IF NOT EXISTS FEEDING_FOOD_REFERENCE (
    event_id INT NOT NULL,
    food_id INT NOT NULL,
    PRIMARY KEY (event_id, food_id),
    FOREIGN KEY (event_id) REFERENCES EVENT(event_id),
    FOREIGN KEY (food_id) REFERENCES FOOD(food_id)
);

CREATE TYPE feeding_type_enum AS ENUM ('BREAST', 'FORMULA', 'SOLID');
CREATE TABLE IF NOT EXISTS FEEDING (
    event_id INT NOT NULL,
    note_id INT NULL,
    feeding_type feeding_type_enum NOT NULL,
    amount FLOAT NULL,
    PRIMARY KEY (event_id),
    FOREIGN KEY (event_id) REFERENCES EVENT(event_id),
    FOREIGN KEY (note_id) REFERENCES NOTE(note_id)
);

CREATE TABLE IF NOT EXISTS GROWTH (
    event_id INT NOT NULL,
    note_id INT NULL,
    height DECIMAL(5,2) NULL,
    weight DECIMAL(5,2) NULL,
    PRIMARY KEY (event_id),
    FOREIGN KEY (event_id) REFERENCES EVENT(event_id),
    FOREIGN KEY (note_id) REFERENCES NOTE(note_id)
);

CREATE TABLE IF NOT EXISTS MEDICATION (
    event_id INT NOT NULL,
    note_id INT NULL,
    name VARCHAR(50) NOT NULL,
    dosage VARCHAR(50) NOT NULL,
    PRIMARY KEY (event_id),
    FOREIGN KEY (event_id) REFERENCES EVENT(event_id),
    FOREIGN KEY (note_id) REFERENCES NOTE(note_id)
);

CREATE TABLE IF NOT EXISTS NIGHT_CHECK (
    event_id INT NOT NULL,
    note_id INT NULL,
    temperature DECIMAL(5,2) NOT NULL,
    PRIMARY KEY (event_id),
    FOREIGN KEY (event_id) REFERENCES EVENT(event_id),
    FOREIGN KEY (note_id) REFERENCES NOTE(note_id)
);

CREATE TABLE IF NOT EXISTS PUMPING (
    event_id INT NOT NULL,
    note_id INT NULL,
    amount DECIMAL(5,2) NOT NULL,
    PRIMARY KEY (event_id),
    FOREIGN KEY (event_id) REFERENCES EVENT(event_id),
    FOREIGN KEY (note_id) REFERENCES NOTE(note_id)
);

CREATE TABLE IF NOT EXISTS TEMPERATURE (
    event_id INT NOT NULL,
    note_id INT NULL,
    temperature DECIMAL(5,2) NOT NULL,
    PRIMARY KEY (event_id),
    FOREIGN KEY (event_id) REFERENCES EVENT(event_id),
    FOREIGN KEY (note_id) REFERENCES NOTE(note_id)
);

CREATE TABLE IF NOT EXISTS TUMMY_TIME (
    event_id INT NOT NULL,
    note_id INT NULL,
    PRIMARY KEY (event_id),
    FOREIGN KEY (event_id) REFERENCES EVENT(event_id),
    FOREIGN KEY (note_id) REFERENCES NOTE(note_id)
);


